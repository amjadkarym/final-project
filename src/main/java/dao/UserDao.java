package dao;

import connection.DBConnection;
import model.UserModel;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class UserDao {

    Connection conn = null;
    Statement stmt = null;

    public void createUser(UserModel user) {

        int autoGeneratedID;
        try {
            conn = DBConnection.getConnection();
            stmt = conn.createStatement();
            String sql = "insert into users (id, username, password, first_name, last_name) "
                    + " values ( "
                    + user.getId()
                    + ",'"
                    + user.getUsername()
                    + "','"
                    + user.getPassword()
                    + "','"
                    + user.getFirstname()
                    + "','"
                    + user.getLastname()
                    + "')";

            PreparedStatement pstmt = conn.prepareStatement(sql,
                    Statement.RETURN_GENERATED_KEYS);
            pstmt.executeUpdate();
            ResultSet keys = pstmt.getGeneratedKeys();
            keys.next();
            autoGeneratedID = keys.getInt(1);
            user.setId(autoGeneratedID);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }// end finally try
        }
    }

    public UserModel getUser(UserModel user) {
        ResultSet rs = null;
        UserModel getUser = null;
        try {
            conn = DBConnection.getConnection();
            stmt = conn.createStatement();
            String sql = "select * from users where id = " + user.getId();

            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                getUser = new UserModel(rs.getInt("id"),
                        rs.getString("username"), rs.getString("password"),
                        rs.getString("first_name"),rs.getString("last_name"));
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }// end finally try
        }

        return getUser;
    }

    public List<UserModel> getUsers() {
        ResultSet rs = null;
        List<UserModel> users = new ArrayList<UserModel>();
        try {
            conn = DBConnection.getConnection();
            stmt = conn.createStatement();
            String sql = "select * from users";

            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                users.add(new UserModel(rs.getInt("id"),
                        rs.getString("username"), rs.getString("password"),
                        rs.getString("first_name"),rs.getString("last_name")));
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }// end finally try
        }

        return users;
    }

    public UserModel getUserById(int id) {
        ResultSet rs = null;
        UserModel user = null;
        try {
            conn = DBConnection.getConnection();
            stmt = conn.createStatement();
            String sql = "select * from users where id = " + id;
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                user = new UserModel(rs.getInt("id"),
                        rs.getString("username"), rs.getString("password"),
                        rs.getString("first_name"), rs.getString("last_name"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }// end finally try
        }
        return user;
    }

    public void updateUser(UserModel user) {
        try {
            conn = DBConnection.getConnection();
            stmt = conn.createStatement();
            String sql = "update user set" + " username = '"
                    + user.getUsername()
                    + "', password = '"
                    + user.getPassword()
                    + "', first_name = '"
                    + user.getFirstname()
                    + "', last_name = '"
                    + user.getLastname()
                    + "' where id = "
                    + user.getId();
            stmt.executeUpdate(sql);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // finally block used to close resources
            try {
                if (stmt != null)
                    conn.close();
            } catch (SQLException se) {
            }// do nothing
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }// end finally try
        }
    }
}